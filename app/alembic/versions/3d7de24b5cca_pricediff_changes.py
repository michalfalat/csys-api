"""PriceDiff Changes

Revision ID: 3d7de24b5cca
Revises: d9f02bb22f48
Create Date: 2024-03-27 14:09:52.408222

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '3d7de24b5cca'
down_revision: Union[str, None] = 'd9f02bb22f48'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum('none', 'bid', 'ask', name='price_diff_type').create(op.get_bind())
    op.add_column('price_diff_params', sa.Column('name', sa.String(length=50), nullable=True))
    op.add_column('price_diff_params', sa.Column('description', sa.String(length=200), nullable=True))
    op.add_column('price_diffs', sa.Column('type', postgresql.ENUM('none', 'bid', 'ask', name='price_diff_type', create_type=False), nullable=True))
    op.add_column('price_diffs', sa.Column('price_diff_params_id', sa.Integer(), nullable=True))
    op.alter_column('price_diffs', 'exchange_1',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
    op.alter_column('price_diffs', 'exchange_2',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
    op.alter_column('price_diffs', 'exchange_1_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('price_diffs', 'exchange_2_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('price_diffs', 'exchange_1_price',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('price_diffs', 'exchange_2_price',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('price_diffs', 'exchange_1_symbol',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
    op.alter_column('price_diffs', 'exchange_2_symbol',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
    op.create_foreign_key(None, 'price_diffs', 'price_diff_params', ['price_diff_params_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'price_diffs', type_='foreignkey')
    op.alter_column('price_diffs', 'exchange_2_symbol',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
    op.alter_column('price_diffs', 'exchange_1_symbol',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
    op.alter_column('price_diffs', 'exchange_2_price',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('price_diffs', 'exchange_1_price',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('price_diffs', 'exchange_2_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('price_diffs', 'exchange_1_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('price_diffs', 'exchange_2',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
    op.alter_column('price_diffs', 'exchange_1',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
    op.drop_column('price_diffs', 'price_diff_params_id')
    op.drop_column('price_diffs', 'type')
    op.drop_column('price_diff_params', 'description')
    op.drop_column('price_diff_params', 'name')
    sa.Enum('none', 'bid', 'ask', name='price_diff_type').drop(op.get_bind())
    # ### end Alembic commands ###
